package cn.tust.model;

import java.util.ArrayList;
import java.util.List;

public class TimetableExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table timetable
     *
     * @mbg.generated Sun May 19 21:25:25 CST 2019
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table timetable
     *
     * @mbg.generated Sun May 19 21:25:25 CST 2019
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table timetable
     *
     * @mbg.generated Sun May 19 21:25:25 CST 2019
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table timetable
     *
     * @mbg.generated Sun May 19 21:25:25 CST 2019
     */
    public TimetableExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table timetable
     *
     * @mbg.generated Sun May 19 21:25:25 CST 2019
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table timetable
     *
     * @mbg.generated Sun May 19 21:25:25 CST 2019
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table timetable
     *
     * @mbg.generated Sun May 19 21:25:25 CST 2019
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table timetable
     *
     * @mbg.generated Sun May 19 21:25:25 CST 2019
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table timetable
     *
     * @mbg.generated Sun May 19 21:25:25 CST 2019
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table timetable
     *
     * @mbg.generated Sun May 19 21:25:25 CST 2019
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table timetable
     *
     * @mbg.generated Sun May 19 21:25:25 CST 2019
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table timetable
     *
     * @mbg.generated Sun May 19 21:25:25 CST 2019
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table timetable
     *
     * @mbg.generated Sun May 19 21:25:25 CST 2019
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table timetable
     *
     * @mbg.generated Sun May 19 21:25:25 CST 2019
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table timetable
     *
     * @mbg.generated Sun May 19 21:25:25 CST 2019
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andSnumberIsNull() {
            addCriterion("sNumber is null");
            return (Criteria) this;
        }

        public Criteria andSnumberIsNotNull() {
            addCriterion("sNumber is not null");
            return (Criteria) this;
        }

        public Criteria andSnumberEqualTo(Integer value) {
            addCriterion("sNumber =", value, "snumber");
            return (Criteria) this;
        }

        public Criteria andSnumberNotEqualTo(Integer value) {
            addCriterion("sNumber <>", value, "snumber");
            return (Criteria) this;
        }

        public Criteria andSnumberGreaterThan(Integer value) {
            addCriterion("sNumber >", value, "snumber");
            return (Criteria) this;
        }

        public Criteria andSnumberGreaterThanOrEqualTo(Integer value) {
            addCriterion("sNumber >=", value, "snumber");
            return (Criteria) this;
        }

        public Criteria andSnumberLessThan(Integer value) {
            addCriterion("sNumber <", value, "snumber");
            return (Criteria) this;
        }

        public Criteria andSnumberLessThanOrEqualTo(Integer value) {
            addCriterion("sNumber <=", value, "snumber");
            return (Criteria) this;
        }

        public Criteria andSnumberIn(List<Integer> values) {
            addCriterion("sNumber in", values, "snumber");
            return (Criteria) this;
        }

        public Criteria andSnumberNotIn(List<Integer> values) {
            addCriterion("sNumber not in", values, "snumber");
            return (Criteria) this;
        }

        public Criteria andSnumberBetween(Integer value1, Integer value2) {
            addCriterion("sNumber between", value1, value2, "snumber");
            return (Criteria) this;
        }

        public Criteria andSnumberNotBetween(Integer value1, Integer value2) {
            addCriterion("sNumber not between", value1, value2, "snumber");
            return (Criteria) this;
        }

        public Criteria andCnumberIsNull() {
            addCriterion("cNumber is null");
            return (Criteria) this;
        }

        public Criteria andCnumberIsNotNull() {
            addCriterion("cNumber is not null");
            return (Criteria) this;
        }

        public Criteria andCnumberEqualTo(Integer value) {
            addCriterion("cNumber =", value, "cnumber");
            return (Criteria) this;
        }

        public Criteria andCnumberNotEqualTo(Integer value) {
            addCriterion("cNumber <>", value, "cnumber");
            return (Criteria) this;
        }

        public Criteria andCnumberGreaterThan(Integer value) {
            addCriterion("cNumber >", value, "cnumber");
            return (Criteria) this;
        }

        public Criteria andCnumberGreaterThanOrEqualTo(Integer value) {
            addCriterion("cNumber >=", value, "cnumber");
            return (Criteria) this;
        }

        public Criteria andCnumberLessThan(Integer value) {
            addCriterion("cNumber <", value, "cnumber");
            return (Criteria) this;
        }

        public Criteria andCnumberLessThanOrEqualTo(Integer value) {
            addCriterion("cNumber <=", value, "cnumber");
            return (Criteria) this;
        }

        public Criteria andCnumberIn(List<Integer> values) {
            addCriterion("cNumber in", values, "cnumber");
            return (Criteria) this;
        }

        public Criteria andCnumberNotIn(List<Integer> values) {
            addCriterion("cNumber not in", values, "cnumber");
            return (Criteria) this;
        }

        public Criteria andCnumberBetween(Integer value1, Integer value2) {
            addCriterion("cNumber between", value1, value2, "cnumber");
            return (Criteria) this;
        }

        public Criteria andCnumberNotBetween(Integer value1, Integer value2) {
            addCriterion("cNumber not between", value1, value2, "cnumber");
            return (Criteria) this;
        }

        public Criteria andCscoreIsNull() {
            addCriterion("cScore is null");
            return (Criteria) this;
        }

        public Criteria andCscoreIsNotNull() {
            addCriterion("cScore is not null");
            return (Criteria) this;
        }

        public Criteria andCscoreEqualTo(Integer value) {
            addCriterion("cScore =", value, "cscore");
            return (Criteria) this;
        }

        public Criteria andCscoreNotEqualTo(Integer value) {
            addCriterion("cScore <>", value, "cscore");
            return (Criteria) this;
        }

        public Criteria andCscoreGreaterThan(Integer value) {
            addCriterion("cScore >", value, "cscore");
            return (Criteria) this;
        }

        public Criteria andCscoreGreaterThanOrEqualTo(Integer value) {
            addCriterion("cScore >=", value, "cscore");
            return (Criteria) this;
        }

        public Criteria andCscoreLessThan(Integer value) {
            addCriterion("cScore <", value, "cscore");
            return (Criteria) this;
        }

        public Criteria andCscoreLessThanOrEqualTo(Integer value) {
            addCriterion("cScore <=", value, "cscore");
            return (Criteria) this;
        }

        public Criteria andCscoreIn(List<Integer> values) {
            addCriterion("cScore in", values, "cscore");
            return (Criteria) this;
        }

        public Criteria andCscoreNotIn(List<Integer> values) {
            addCriterion("cScore not in", values, "cscore");
            return (Criteria) this;
        }

        public Criteria andCscoreBetween(Integer value1, Integer value2) {
            addCriterion("cScore between", value1, value2, "cscore");
            return (Criteria) this;
        }

        public Criteria andCscoreNotBetween(Integer value1, Integer value2) {
            addCriterion("cScore not between", value1, value2, "cscore");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table timetable
     *
     * @mbg.generated do_not_delete_during_merge Sun May 19 21:25:25 CST 2019
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table timetable
     *
     * @mbg.generated Sun May 19 21:25:25 CST 2019
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }
    }
}