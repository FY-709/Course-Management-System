package cn.tust.model;

import java.util.ArrayList;
import java.util.List;

public class ClassroomsExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table classrooms
     *
     * @mbg.generated Sun May 19 21:25:25 CST 2019
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table classrooms
     *
     * @mbg.generated Sun May 19 21:25:25 CST 2019
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table classrooms
     *
     * @mbg.generated Sun May 19 21:25:25 CST 2019
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table classrooms
     *
     * @mbg.generated Sun May 19 21:25:25 CST 2019
     */
    public ClassroomsExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table classrooms
     *
     * @mbg.generated Sun May 19 21:25:25 CST 2019
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table classrooms
     *
     * @mbg.generated Sun May 19 21:25:25 CST 2019
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table classrooms
     *
     * @mbg.generated Sun May 19 21:25:25 CST 2019
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table classrooms
     *
     * @mbg.generated Sun May 19 21:25:25 CST 2019
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table classrooms
     *
     * @mbg.generated Sun May 19 21:25:25 CST 2019
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table classrooms
     *
     * @mbg.generated Sun May 19 21:25:25 CST 2019
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table classrooms
     *
     * @mbg.generated Sun May 19 21:25:25 CST 2019
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table classrooms
     *
     * @mbg.generated Sun May 19 21:25:25 CST 2019
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table classrooms
     *
     * @mbg.generated Sun May 19 21:25:25 CST 2019
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table classrooms
     *
     * @mbg.generated Sun May 19 21:25:25 CST 2019
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table classrooms
     *
     * @mbg.generated Sun May 19 21:25:25 CST 2019
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andRnumberIsNull() {
            addCriterion("rNumber is null");
            return (Criteria) this;
        }

        public Criteria andRnumberIsNotNull() {
            addCriterion("rNumber is not null");
            return (Criteria) this;
        }

        public Criteria andRnumberEqualTo(Integer value) {
            addCriterion("rNumber =", value, "rnumber");
            return (Criteria) this;
        }

        public Criteria andRnumberNotEqualTo(Integer value) {
            addCriterion("rNumber <>", value, "rnumber");
            return (Criteria) this;
        }

        public Criteria andRnumberGreaterThan(Integer value) {
            addCriterion("rNumber >", value, "rnumber");
            return (Criteria) this;
        }

        public Criteria andRnumberGreaterThanOrEqualTo(Integer value) {
            addCriterion("rNumber >=", value, "rnumber");
            return (Criteria) this;
        }

        public Criteria andRnumberLessThan(Integer value) {
            addCriterion("rNumber <", value, "rnumber");
            return (Criteria) this;
        }

        public Criteria andRnumberLessThanOrEqualTo(Integer value) {
            addCriterion("rNumber <=", value, "rnumber");
            return (Criteria) this;
        }

        public Criteria andRnumberIn(List<Integer> values) {
            addCriterion("rNumber in", values, "rnumber");
            return (Criteria) this;
        }

        public Criteria andRnumberNotIn(List<Integer> values) {
            addCriterion("rNumber not in", values, "rnumber");
            return (Criteria) this;
        }

        public Criteria andRnumberBetween(Integer value1, Integer value2) {
            addCriterion("rNumber between", value1, value2, "rnumber");
            return (Criteria) this;
        }

        public Criteria andRnumberNotBetween(Integer value1, Integer value2) {
            addCriterion("rNumber not between", value1, value2, "rnumber");
            return (Criteria) this;
        }

        public Criteria andRcountIsNull() {
            addCriterion("rCount is null");
            return (Criteria) this;
        }

        public Criteria andRcountIsNotNull() {
            addCriterion("rCount is not null");
            return (Criteria) this;
        }

        public Criteria andRcountEqualTo(Integer value) {
            addCriterion("rCount =", value, "rcount");
            return (Criteria) this;
        }

        public Criteria andRcountNotEqualTo(Integer value) {
            addCriterion("rCount <>", value, "rcount");
            return (Criteria) this;
        }

        public Criteria andRcountGreaterThan(Integer value) {
            addCriterion("rCount >", value, "rcount");
            return (Criteria) this;
        }

        public Criteria andRcountGreaterThanOrEqualTo(Integer value) {
            addCriterion("rCount >=", value, "rcount");
            return (Criteria) this;
        }

        public Criteria andRcountLessThan(Integer value) {
            addCriterion("rCount <", value, "rcount");
            return (Criteria) this;
        }

        public Criteria andRcountLessThanOrEqualTo(Integer value) {
            addCriterion("rCount <=", value, "rcount");
            return (Criteria) this;
        }

        public Criteria andRcountIn(List<Integer> values) {
            addCriterion("rCount in", values, "rcount");
            return (Criteria) this;
        }

        public Criteria andRcountNotIn(List<Integer> values) {
            addCriterion("rCount not in", values, "rcount");
            return (Criteria) this;
        }

        public Criteria andRcountBetween(Integer value1, Integer value2) {
            addCriterion("rCount between", value1, value2, "rcount");
            return (Criteria) this;
        }

        public Criteria andRcountNotBetween(Integer value1, Integer value2) {
            addCriterion("rCount not between", value1, value2, "rcount");
            return (Criteria) this;
        }

        public Criteria andRmultimediaIsNull() {
            addCriterion("rMultiMedia is null");
            return (Criteria) this;
        }

        public Criteria andRmultimediaIsNotNull() {
            addCriterion("rMultiMedia is not null");
            return (Criteria) this;
        }

        public Criteria andRmultimediaEqualTo(Byte value) {
            addCriterion("rMultiMedia =", value, "rmultimedia");
            return (Criteria) this;
        }

        public Criteria andRmultimediaNotEqualTo(Byte value) {
            addCriterion("rMultiMedia <>", value, "rmultimedia");
            return (Criteria) this;
        }

        public Criteria andRmultimediaGreaterThan(Byte value) {
            addCriterion("rMultiMedia >", value, "rmultimedia");
            return (Criteria) this;
        }

        public Criteria andRmultimediaGreaterThanOrEqualTo(Byte value) {
            addCriterion("rMultiMedia >=", value, "rmultimedia");
            return (Criteria) this;
        }

        public Criteria andRmultimediaLessThan(Byte value) {
            addCriterion("rMultiMedia <", value, "rmultimedia");
            return (Criteria) this;
        }

        public Criteria andRmultimediaLessThanOrEqualTo(Byte value) {
            addCriterion("rMultiMedia <=", value, "rmultimedia");
            return (Criteria) this;
        }

        public Criteria andRmultimediaIn(List<Byte> values) {
            addCriterion("rMultiMedia in", values, "rmultimedia");
            return (Criteria) this;
        }

        public Criteria andRmultimediaNotIn(List<Byte> values) {
            addCriterion("rMultiMedia not in", values, "rmultimedia");
            return (Criteria) this;
        }

        public Criteria andRmultimediaBetween(Byte value1, Byte value2) {
            addCriterion("rMultiMedia between", value1, value2, "rmultimedia");
            return (Criteria) this;
        }

        public Criteria andRmultimediaNotBetween(Byte value1, Byte value2) {
            addCriterion("rMultiMedia not between", value1, value2, "rmultimedia");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table classrooms
     *
     * @mbg.generated do_not_delete_during_merge Sun May 19 21:25:25 CST 2019
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table classrooms
     *
     * @mbg.generated Sun May 19 21:25:25 CST 2019
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }
    }
}